/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package com.cineotaku.proyecto_cine.vista;

/**
 *
 * @author User
 */

import com.cineotaku.proyecto_cine.controlador.*;
import com.cineotaku.proyecto_cine.modelo.*;
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.time.format.DateTimeFormatter;
import java.util.List;

public class VentanaPelicula extends javax.swing.JFrame {
    private CineControlador controlador;
    private Pelicula pelicula;
    
    public VentanaPelicula(CineControlador controlador, Pelicula pelicula) {
        this.controlador = controlador;
        this.pelicula = pelicula;
        initComponents();
        configurarVentana();
        cargarDatosPelicula();
        cargarFunciones();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        panelInfo = new javax.swing.JPanel();
        panelTexto = new javax.swing.JPanel();
        lblTitulo = new javax.swing.JLabel();
        lblDirector = new javax.swing.JLabel();  
        lblGenero = new javax.swing.JLabel();
        lblClasificacion = new javax.swing.JLabel();
        lblDuracion = new javax.swing.JLabel();
        scrollSinopsis = new javax.swing.JScrollPane();
        txtSinopsis = new javax.swing.JTextArea();
        panelCentral = new javax.swing.JPanel();
        lblFunciones = new javax.swing.JLabel();
        scrollFunciones = new javax.swing.JScrollPane();
        panelFunciones = new javax.swing.JPanel();
        panelInferior = new javax.swing.JPanel();
        btnVolver = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(800, 600));

        panelInfo.setBackground(new java.awt.Color(25, 25, 112));
        panelInfo.setBorder(javax.swing.BorderFactory.createEmptyBorder(20, 20, 20, 20));
        panelInfo.setLayout(new java.awt.BorderLayout());

        panelTexto.setBackground(new java.awt.Color(25, 25, 112));
        panelTexto.setLayout(new java.awt.GridLayout(5, 1, 5, 5));

        lblTitulo.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N - Aumentado el tamaño para pantalla completa
        lblTitulo.setForeground(new java.awt.Color(255, 255, 255));
        lblTitulo.setText("Título de la Película");
        panelTexto.add(lblTitulo);

        lblDirector.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N - Aumentado el tamaño
        lblDirector.setForeground(new java.awt.Color(255, 255, 255));
        lblDirector.setText("Director: ");
        panelTexto.add(lblDirector);

        lblGenero.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N - Aumentado el tamaño
        lblGenero.setForeground(new java.awt.Color(255, 255, 255));
        lblGenero.setText("Género: ");
        panelTexto.add(lblGenero);

        lblClasificacion.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N - Aumentado el tamaño
        lblClasificacion.setForeground(new java.awt.Color(255, 255, 255));
        lblClasificacion.setText("Clasificación: ");
        panelTexto.add(lblClasificacion);

        lblDuracion.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N - Aumentado el tamaño
        lblDuracion.setForeground(new java.awt.Color(255, 255, 255));
        lblDuracion.setText("Duración: ");
        panelTexto.add(lblDuracion);

        panelInfo.add(panelTexto, java.awt.BorderLayout.PAGE_START);

        txtSinopsis.setBackground(new java.awt.Color(25, 25, 112));
        txtSinopsis.setColumns(20);
        txtSinopsis.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N - Aumentado el tamaño
        txtSinopsis.setForeground(new java.awt.Color(255, 255, 255));
        txtSinopsis.setLineWrap(true);
        txtSinopsis.setRows(5);
        txtSinopsis.setText("Sinopsis de la película...");
        txtSinopsis.setWrapStyleWord(true);
        txtSinopsis.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 0, 0, 0));
        txtSinopsis.setEditable(false);
        scrollSinopsis.setViewportView(txtSinopsis);
        scrollSinopsis.setBackground(new java.awt.Color(25, 25, 112));
        scrollSinopsis.setBorder(null);

        panelInfo.add(scrollSinopsis, java.awt.BorderLayout.CENTER);

        panelCentral.setLayout(new java.awt.BorderLayout());

        lblFunciones.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N - Aumentado el tamaño
        lblFunciones.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFunciones.setText("HORARIOS DISPONIBLES");
        lblFunciones.setBorder(javax.swing.BorderFactory.createEmptyBorder(15, 0, 15, 0));
        panelCentral.add(lblFunciones, java.awt.BorderLayout.PAGE_START);

        scrollFunciones.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED);

        panelFunciones.setBackground(new java.awt.Color(240, 248, 255));
        panelFunciones.setBorder(javax.swing.BorderFactory.createEmptyBorder(30, 30, 30, 30));
        panelFunciones.setLayout(new java.awt.GridLayout(0, 3, 15, 15)); // Cambiado a 3 columnas para pantalla completa
        scrollFunciones.setViewportView(panelFunciones);

        panelCentral.add(scrollFunciones, java.awt.BorderLayout.CENTER);

        panelInferior.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        btnVolver.setBackground(new java.awt.Color(108, 117, 125));
        btnVolver.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N - Aumentado el tamaño
        btnVolver.setForeground(new java.awt.Color(255, 255, 255));
        btnVolver.setText("← Volver a Cartelera");
        btnVolver.setBorderPainted(false);
        btnVolver.setFocusPainted(false);
        btnVolver.setPreferredSize(new java.awt.Dimension(200, 40)); // Botón más grande
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });
        panelInferior.add(btnVolver);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panelCentral, javax.swing.GroupLayout.DEFAULT_SIZE, 800, Short.MAX_VALUE)
            .addComponent(panelInferior, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE) // Aumentado
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelCentral, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE) // Aumentado
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelInferior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {
        dispose();
    }
    
    private void configurarVentana() {
        // Configurar para pantalla completa
        configurarTamañoPantalla();
        
        // Agregar tecla ESC para cerrar (opcional)
        addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent e) {
                if (e.getKeyCode() == KeyEvent.VK_ESCAPE) {
                    dispose();
                }
            }
        });
        setFocusable(true);
        requestFocus();
    }
    
    private void configurarTamañoPantalla() {
        // Obtener dimensiones de la pantalla
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        
        // Establecer tamaño completo de pantalla
        setSize(screenSize.width, screenSize.height);
        
        // Centrar en pantalla
        setLocationRelativeTo(null);
        
        // Iniciar maximizada
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        
        // Opcional: sin redimensionamiento manual
        setResizable(true); // Mantener true para que funcione la maximización
    }
    
    private void cargarDatosPelicula() {
        setTitle(pelicula.getTitulo());
        lblTitulo.setText(pelicula.getTitulo());
        lblDirector.setText("Director: " + pelicula.getDirector());
        lblGenero.setText("Género: " + pelicula.getGenero());
        lblClasificacion.setText("Clasificación: " + pelicula.getClasificacion());
        lblDuracion.setText("Duración: " + pelicula.getDuracionFormateada());
        txtSinopsis.setText(pelicula.getSinopsis());
    }
    
    private void cargarFunciones() {
        panelFunciones.removeAll();
        List<Funcion> funciones = controlador.obtenerFuncionesPorPelicula(pelicula.getId());
        
        if (funciones.isEmpty()) {
            JLabel lblSinFunciones = new JLabel("No hay funciones disponibles", SwingConstants.CENTER);
            lblSinFunciones.setFont(new Font("Arial", Font.ITALIC, 16)); // Tamaño aumentado
            lblSinFunciones.setForeground(Color.GRAY);
            panelFunciones.add(lblSinFunciones);
        } else {
            for (Funcion funcion : funciones) {
                JPanel cardFuncion = crearCardFuncion(funcion);
                panelFunciones.add(cardFuncion);
            }
        }
        
        panelFunciones.revalidate();
        panelFunciones.repaint();
    }
    
    private JPanel crearCardFuncion(Funcion funcion) {
        JPanel card = new JPanel(new BorderLayout());
        card.setBackground(Color.WHITE);
        card.setBorder(BorderFactory.createCompoundBorder(
            BorderFactory.createLineBorder(new Color(200, 200, 200), 1),
            BorderFactory.createEmptyBorder(20, 20, 20, 20) // Padding aumentado
        ));
        
        Sala sala = controlador.getSalaControlador().obtenerPorId(funcion.getSalaId());
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm");
        
        JPanel panelInfoFuncion = new JPanel(new GridLayout(4, 1, 8, 8)); // Espaciado aumentado
        panelInfoFuncion.setBackground(Color.WHITE);
        
        JLabel lblFecha = new JLabel(funcion.getFechaHora().format(formatter));
        lblFecha.setFont(new Font("Arial", Font.BOLD, 16)); // Tamaño aumentado
        lblFecha.setHorizontalAlignment(SwingConstants.CENTER);
        
        JLabel lblSala = new JLabel("Sala: " + (sala != null ? sala.getNombre() : "Sala " + funcion.getSalaId()));
        lblSala.setFont(new Font("Arial", Font.PLAIN, 14)); // Tamaño aumentado
        lblSala.setHorizontalAlignment(SwingConstants.CENTER);
        
        JLabel lblPrecio = new JLabel("$" + String.format("%.2f", funcion.getPrecio()));
        lblPrecio.setFont(new Font("Arial", Font.BOLD, 16)); // Tamaño aumentado
        lblPrecio.setHorizontalAlignment(SwingConstants.CENTER);
        lblPrecio.setForeground(new Color(0, 128, 0));
        
        JButton btnSeleccionar = new JButton("Seleccionar Asientos");
        btnSeleccionar.setBackground(new Color(40, 167, 69));
        btnSeleccionar.setForeground(Color.WHITE);
        btnSeleccionar.setFocusPainted(false);
        btnSeleccionar.setBorderPainted(false);
        btnSeleccionar.setFont(new Font("Arial", Font.BOLD, 14)); // Tamaño aumentado
        btnSeleccionar.setPreferredSize(new Dimension(180, 35)); // Tamaño del botón aumentado
        btnSeleccionar.addActionListener(e -> abrirSeleccionAsientos(funcion));
        
        panelInfoFuncion.add(lblFecha);
        panelInfoFuncion.add(lblSala);
        panelInfoFuncion.add(lblPrecio);
        panelInfoFuncion.add(btnSeleccionar);
        
        card.add(panelInfoFuncion, BorderLayout.CENTER);
        return card;
    }
    
    private void abrirSeleccionAsientos(Funcion funcion) {
        new UbicacionAsientos(controlador, funcion, pelicula).setVisible(true);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPelicula.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPelicula.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPelicula.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPelicula.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                // Ejemplo de uso - necesitarás instancias reales
                // new VentanaPelicula(controlador, pelicula).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify
    private javax.swing.JButton btnVolver;
    private javax.swing.JLabel lblClasificacion;
    private javax.swing.JLabel lblDirector;
    private javax.swing.JLabel lblDuracion;
    private javax.swing.JLabel lblFunciones;
    private javax.swing.JLabel lblGenero;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JPanel panelCentral;
    private javax.swing.JPanel panelFunciones;
    private javax.swing.JPanel panelInfo;
    private javax.swing.JPanel panelInferior;
    private javax.swing.JPanel panelTexto;
    private javax.swing.JScrollPane scrollFunciones;
    private javax.swing.JScrollPane scrollSinopsis;
    private javax.swing.JTextArea txtSinopsis;
    // End of variables declaration
}